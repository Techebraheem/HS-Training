variables:
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  DOCKER_REGISTRY: 712726181972.dkr.ecr.us-east-1.amazonaws.com
  region: us-east-1
  DOCKER_HOST: tcp://docker:2375
# stages:
#   - build
publish:
  image: 
      name: amazon/aws-cli
      entrypoint: [""]
  services:
    - docker:dind
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
   # - docker login -u AWS -p $(aws ecr get-login-password --region us-east-1)$DOCKER_REGISTRY
    # - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    # - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEjhjjY
    - echo $AWS_SECRET_ACCESS_KEY
    - echo $AWS_ACCESS_KEY_ID
    - echo $DOCKER_REGISTRY
    - echo $region
    # - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    # - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    # - aws configure set default.region $region
    - aws ecr get-login-password --region $region | docker login --username AWS --password-stdin $DOCKER_REGISTRY
    - docker build -t flaskimage:latest -t flaskimage:$CI_PIPELINE_IID . 
    - docker tag flaskimage:latest $DOCKER_REGISTRY/flaskimage:latest
    - docker push $DOCKER_REGISTRY/flaskimage:latest
    - docker tag flaskimage:$CI_PIPELINE_IID $DOCKER_REGISTRY/flaskimage:$CI_PIPELINE_IID
    - docker push $DOCKER_REGISTRY/flaskimage:$CI_PIPELINE_IID
    

